const { createClient } = require('@supabase/supabase-js');
const bcrypt = require('bcryptjs');

// Configuraci√≥n de Supabase
const supabaseUrl = 'https://tmqglnycivlcjijoymwe.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRtcWdsbnljaXZsY2ppam95bXdlIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MDU1NDU0NiwiZXhwIjoyMDc2MTMwNTQ2fQ.qhJFpYqLhjK7L2Q9Xh3jP7sT8wRkKmYnN4vB2Xf8D3o';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function updateUserPassword() {
  try {
    console.log('üîß Actualizando contrase√±a del usuario camiloalegriabarra@gmail.com...');
    
    // Hashear la contrase√±a
    const plainPassword = 'Antonito26';
    const saltRounds = 10;
    const hashedPassword = await bcrypt.hash(plainPassword, saltRounds);
    
    console.log('üìù Contrase√±a hasheada correctamente');
    
    // Actualizar la contrase√±a en la base de datos
    const { data, error } = await supabase
      .from('users')
      .update({ 
        password: hashedPassword,
        updated_at: new Date().toISOString()
      })
      .eq('email', 'camiloalegriabarra@gmail.com')
      .select();
    
    if (error) {
      console.error('‚ùå Error al actualizar la contrase√±a:', error);
      return;
    }
    
    console.log('‚úÖ Contrase√±a actualizada exitosamente');
    console.log('üìä Datos del usuario actualizado:', data);
    
    // Verificar la actualizaci√≥n
    const { data: verifyData, error: verifyError } = await supabase
      .from('users')
      .select('id, email, name, role, updated_at')
      .eq('email', 'camiloalegriabarra@gmail.com')
      .single();
    
    if (verifyError) {
      console.error('‚ùå Error al verificar la actualizaci√≥n:', verifyError);
      return;
    }
    
    console.log('‚úÖ Verificaci√≥n completada:');
    console.log('   - ID:', verifyData.id);
    console.log('   - Email:', verifyData.email);
    console.log('   - Nombre:', verifyData.name);
    console.log('   - Rol:', verifyData.role);
    console.log('   - Actualizado:', verifyData.updated_at);
    
  } catch (error) {
    console.error('‚ùå Error inesperado:', error);
  }
}

// Ejecutar la funci√≥n
updateUserPassword();